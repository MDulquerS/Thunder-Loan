ThunderLoan.getCalculatedFee(IERC20,uint256) (src/protocol/ThunderLoan.sol#249-259) performs a multiplication on the result of a division:
        - valueOfBorrowedToken = (amount * getPriceInWeth(address(token))) / s_feePrecision (src/protocol/ThunderLoan.sol#253-256)
        - fee = (valueOfBorrowedToken * s_flashLoanFee) / s_feePrecision (src/protocol/ThunderLoan.sol#258-259)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
ThunderLoan.flashloan(address,IERC20,uint256,bytes) (src/protocol/ThunderLoan.sol#176-224) ignores return value by receiverAddress.functionCall(abi.encodeCall(IFlashLoanReceiver.executeOperation,(address(token),amount,fee,msg.sender,params))) (src/protocol/ThunderLoan.sol#206-214)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return  
INFO:Detectors:
ThunderLoan.updateFlashLoanFee(uint256) (src/protocol/ThunderLoan.sol#259-262) should emit an event for:
        - s_flashLoanFee = newFee (src/protocol/ThunderLoan.sol#261-262)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Reentrancy in ThunderLoan.flashloan(address,IERC20,uint256,bytes) (src/protocol/ThunderLoan.sol#176-224):
        External calls:
        - assetToken.updateExchangeRate(fee) (src/protocol/ThunderLoan.sol#199-200)     
        State variables written after the call(s):
        - s_currentlyFlashLoaning[token] = true (src/protocol/ThunderLoan.sol#203)      
Reentrancy in ThunderLoan.flashloan(address,IERC20,uint256,bytes) (src/protocol/ThunderLoan.sol#176-224):
        External calls:
        - assetToken.updateExchangeRate(fee) (src/protocol/ThunderLoan.sol#199-200)     
        - assetToken.transferUnderlyingTo(receiverAddress,amount) (src/protocol/ThunderLoan.sol#203-204)
        - receiverAddress.functionCall(abi.encodeCall(IFlashLoanReceiver.executeOperation,(address(token),amount,fee,msg.sender,params))) (src/protocol/ThunderLoan.sol#206-214)
        State variables written after the call(s):
        - s_currentlyFlashLoaning[token] = false (src/protocol/ThunderLoan.sol#224)     
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in ThunderLoan.flashloan(address,IERC20,uint256,bytes) (src/protocol/ThunderLoan.sol#176-224):
        External calls:
        - assetToken.updateExchangeRate(fee) (src/protocol/ThunderLoan.sol#199-200)     
        Event emitted after the call(s):
        - FlashLoan(receiverAddress,token,amount,fee,params) (src/protocol/ThunderLoan.sol#202-203)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
**THIS CHECKLIST IS NOT COMPLETE**. Use `--show-ignored-findings` to show all the results.
Summary
 - [divide-before-multiply](#divide-before-multiply) (1 results) (Medium)
 - [unused-return](#unused-return) (1 results) (Medium)
 - [events-maths](#events-maths) (1 results) (Low)
 - [reentrancy-benign](#reentrancy-benign) (2 results) (Low)
 - [reentrancy-events](#reentrancy-events) (1 results) (Low)
## divide-before-multiply
Impact: Medium
Confidence: Medium
 - [ ] ID-0
[ThunderLoan.getCalculatedFee(IERC20,uint256)](src/protocol/ThunderLoan.sol#L249-L259) performs a multiplication on the result of a division:
        - [valueOfBorrowedToken = (amount * getPriceInWeth(address(token))) / s_feePrecision](src/protocol/ThunderLoan.sol#L253-L256)
        - [fee = (valueOfBorrowedToken * s_flashLoanFee) / s_feePrecision](src/protocol/ThunderLoan.sol#L258-L259)

src/protocol/ThunderLoan.sol#L249-L259


## unused-return
Impact: Medium
Confidence: Medium
 - [ ] ID-1
[ThunderLoan.flashloan(address,IERC20,uint256,bytes)](src/protocol/ThunderLoan.sol#L176-L224) ignores return value by [receiverAddress.functionCall(abi.encodeCall(IFlashLoanReceiver.executeOperation,(address(token),amount,fee,msg.sender,params)))](src/protocol/ThunderLoan.sol#L206-L214)

src/protocol/ThunderLoan.sol#L176-L224


## events-maths
Impact: Low
Confidence: Medium
 - [ ] ID-2
[ThunderLoan.updateFlashLoanFee(uint256)](src/protocol/ThunderLoan.sol#L259-L262) should emit an event for:
        - [s_flashLoanFee = newFee](src/protocol/ThunderLoan.sol#L261-L262)

src/protocol/ThunderLoan.sol#L259-L262


## reentrancy-benign
Impact: Low
Confidence: Medium
 - [ ] ID-3
Reentrancy in [ThunderLoan.flashloan(address,IERC20,uint256,bytes)](src/protocol/ThunderLoan.sol#L176-L224):
        External calls:
        - [assetToken.updateExchangeRate(fee)](src/protocol/ThunderLoan.sol#L199-L200)  
        State variables written after the call(s):
        - [s_currentlyFlashLoaning[token] = true](src/protocol/ThunderLoan.sol#L203)    

src/protocol/ThunderLoan.sol#L176-L224


 - [ ] ID-4
Reentrancy in [ThunderLoan.flashloan(address,IERC20,uint256,bytes)](src/protocol/ThunderLoan.sol#L176-L224):
        External calls:
        - [assetToken.updateExchangeRate(fee)](src/protocol/ThunderLoan.sol#L199-L200)  
        - [assetToken.transferUnderlyingTo(receiverAddress,amount)](src/protocol/ThunderLoan.sol#L203-L204)
        - [receiverAddress.functionCall(abi.encodeCall(IFlashLoanReceiver.executeOperation,(address(token),amount,fee,msg.sender,params)))](src/protocol/ThunderLoan.sol#L206-L214)
        State variables written after the call(s):
        - [s_currentlyFlashLoaning[token] = false](src/protocol/ThunderLoan.sol#L224)   

src/protocol/ThunderLoan.sol#L176-L224


## reentrancy-events
Impact: Low
Confidence: Medium
 - [ ] ID-5
Reentrancy in [ThunderLoan.flashloan(address,IERC20,uint256,bytes)](src/protocol/ThunderLoan.sol#L176-L224):
        External calls:
        - [assetToken.updateExchangeRate(fee)](src/protocol/ThunderLoan.sol#L199-L200)  
        Event emitted after the call(s):
        - [FlashLoan(receiverAddress,token,amount,fee,params)](src/protocol/ThunderLoan.sol#L202-L203)

src/protocol/ThunderLoan.sol#L176-L224


INFO:Slither:. analyzed (26 contracts with 91 detectors), 6 result(s) found